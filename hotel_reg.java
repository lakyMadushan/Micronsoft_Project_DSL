package dt;


import dt.DB;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Vector;
import javax.swing.Icon;
import javax.swing.JOptionPane;
import javax.swing.JPasswordField;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Vidura samitha
 */
public class hotel_reg extends javax.swing.JFrame {

    SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
    SimpleDateFormat sdf1 = new SimpleDateFormat("hh.mm.ss.aa");
    Date d, d1;
    Icon icon = new javax.swing.ImageIcon(getClass().getResource("/dt/pics/suc.png"));
    Icon erricon = new javax.swing.ImageIcon(getClass().getResource("/dt/pics/cut.png"));

    /**
     * Creates new form hotel
     */
    public hotel_reg() {
        initComponents();
        comboLoad();
        idLoad();
        setDate();
        setTime();
        jTextField4.requestFocus();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jLabel8 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jLabel19 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jPanel1.setBackground(new java.awt.Color(173, 225, 255));
        jPanel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setText("Hotel Reg");

        jPanel2.setBackground(new java.awt.Color(204, 204, 255));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1321, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 110, Short.MAX_VALUE)
        );

        jPanel3.setBackground(new java.awt.Color(204, 204, 255));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel6.setText("Search By :");

        jTextField4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTextField4.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jTextField4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField4ActionPerformed(evt);
            }
        });
        jTextField4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField4KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField4KeyReleased(evt);
            }
        });

        jList1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jList1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList1MouseClicked(evt);
            }
        });
        jList1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jList1KeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(jList1);

        jLabel8.setText("Hotel Name");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel8))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel6)
                        .addComponent(jTextField4, javax.swing.GroupLayout.DEFAULT_SIZE, 275, Short.MAX_VALUE)
                        .addComponent(jScrollPane2)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8)
                .addGap(8, 8, 8)
                .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 388, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel4.setBackground(new java.awt.Color(204, 204, 255));

        jTextField1.setEditable(false);
        jTextField1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTextField1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField1FocusGained(evt);
            }
        });

        jTextField2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTextField2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jTextField2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField2FocusGained(evt);
            }
        });
        jTextField2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField2KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField2KeyTyped(evt);
            }
        });

        jTextField3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTextField3.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jTextField3.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField3FocusGained(evt);
            }
        });
        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });
        jTextField3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField3KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField3KeyTyped(evt);
            }
        });

        jComboBox1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jComboBox1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jComboBox1MouseClicked(evt);
            }
        });
        jComboBox1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jComboBox1KeyPressed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("Id");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setText("Hotel");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel4.setText("Area");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel5.setText("Contact");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel3)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5.setBackground(new java.awt.Color(204, 204, 255));

        jTable1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Name", "Area", "Contact"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTable1KeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
            jTable1.getColumnModel().getColumn(2).setResizable(false);
            jTable1.getColumnModel().getColumn(3).setResizable(false);
        }

        jButton2.setBackground(new java.awt.Color(65, 58, 138));
        jButton2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Load All");
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jButton2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton2KeyPressed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(194, 151, 105));
        jButton3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("Clear All");
        jButton3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jButton3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton3KeyPressed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(235, 168, 41));
        jButton4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("Update");
        jButton4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jButton4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton4KeyPressed(evt);
            }
        });

        jButton5.setBackground(new java.awt.Color(225, 31, 29));
        jButton5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton5.setForeground(new java.awt.Color(255, 255, 255));
        jButton5.setText("Delete");
        jButton5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jButton5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton5KeyPressed(evt);
            }
        });

        jButton6.setBackground(new java.awt.Color(23, 184, 46));
        jButton6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton6.setForeground(new java.awt.Color(255, 255, 255));
        jButton6.setText("Save");
        jButton6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jButton6.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton6KeyPressed(evt);
            }
        });

        jButton7.setBackground(new java.awt.Color(255, 255, 204));
        jButton7.setText("Remove Item");
        jButton7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addGap(18, 18, 18)
                        .addComponent(jButton6)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3)
                        .addGap(18, 18, 18)
                        .addComponent(jButton4)
                        .addGap(18, 18, 18)
                        .addComponent(jButton5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton7)
                        .addGap(23, 23, 23))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1006, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 371, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton7))
                .addContainerGap())
        );

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel19.setText("00.00.00");
        jLabel19.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel18.setText("yyyy-MM-dd");
        jLabel18.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel18)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel19))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                        .addComponent(jLabel18)
                        .addComponent(jLabel19)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        jMenu1.setText("File");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setText("Add Hotel Area");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        new hotel_area().setVisible(true);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3ActionPerformed

    private void jComboBox1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBox1MouseClicked
        comboLoad();
    }//GEN-LAST:event_jComboBox1MouseClicked

    private void jTextField4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField4ActionPerformed

    private void jTextField4KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField4KeyReleased
        try {
            if (!jTextField4.getText().equals("")) {

                //Hotel Name
                ResultSet rs = DB.search("select * from hotel_reg where Name like '%" + jTextField4.getText() + "%' order by Name asc ");
                Vector v = new Vector();
                while (rs.next()) {
                    v.add(rs.getString("id") + "##" + rs.getString("Name") + "-" + rs.getString("Area") + "-" + rs.getString("Contact"));
                }
                jList1.setListData(v);

            }
        } catch (Exception e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_jTextField4KeyReleased

    private void jList1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList1MouseClicked
        Object selectedValue = jList1.getSelectedValue();
        if (selectedValue != null) {
            ((DefaultTableModel) jTable1.getModel()).setNumRows(0);
            String[] parts = selectedValue.toString().split("##");
            if (parts.length >= 2) {
                jTextField1.setText(parts[0]);

                jTextField2.requestFocus();
                jTextField4.setText("");
                jList1.setListData(new String[0]);
                // search allready cus
                try {
                    DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
                    dtm.setRowCount(0);
                    ResultSet rs = DB.search("select * from hotel_reg where id = '" + parts[0] + "'  ");
                    while (rs.next()) {
                        Vector<Object> v = new Vector<>();
                        v.add(rs.getString("id"));
                        v.add(rs.getString("Name"));
                        v.add(rs.getString("Area"));
                        v.add(rs.getString("Contact"));

                        dtm.addRow(v);
                    }
                } catch (Exception e) {
                    e.printStackTrace();
                }

            }
        }
    }//GEN-LAST:event_jList1MouseClicked

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        //save
        if (jTextField1.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Please Enter data before Save !", "Error", JOptionPane.INFORMATION_MESSAGE, erricon);
        } else {
            try {
                DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
                for (int i = 0; i < dtm.getRowCount(); i++) {

                    //String t_id = dtm.getValueAt(jTable1.getSelectedRow(), 1).toString();
                    String name = dtm.getValueAt(i, 1).toString();
                    String area = dtm.getValueAt(i, 2).toString();
                    String contact = dtm.getValueAt(i, 3).toString();

                    DB.iud("insert into hotel_reg (Name,Area,Contact) "
                            + "values (  '" + name + "','" + area + "','" + contact + "' )");

                    JOptionPane.showMessageDialog(this, "Insert successfully.", "DONE", JOptionPane.INFORMATION_MESSAGE, icon);
                    idLoad();
                }
            } catch (Exception e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(this, "Save Unsucces !", "ERROR", JOptionPane.INFORMATION_MESSAGE, erricon);
            }
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        ((DefaultTableModel) jTable1.getModel()).setNumRows(0);
        jList1.setListData(new String[0]);
        jTextField2.setText("");
        jTextField3.setText("");

        idLoad();
        jButton6.setEnabled(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        //update
        try {
            if (jTextField2.getText().equals("") || jTextField3.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "Select Row", "DONE", JOptionPane.INFORMATION_MESSAGE, erricon);
            } else {
                JPasswordField passwordField = new JPasswordField(10);
                int option = JOptionPane.showConfirmDialog(null, passwordField, "Enter Password",
                        JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);
                if (option == JOptionPane.OK_OPTION) {
                    String password = new String(passwordField.getPassword());
                    if (password.equals("123")) {
                        ResultSet rs = DB.search("select * from hotel_reg where id = '" + jTextField1.getText() + "' ");
                        if (rs.next()) {
                            DB.iud("update hotel_reg set "
                                    + " Name = '" + jTextField2.getText() + "' ,Area = '" + jComboBox1.getSelectedItem() + "' ,Contact = '" + jTextField3.getText() + "' WHERE id = '" + jTextField1.getText() + "' ");
                            JOptionPane.showMessageDialog(this, "Update successfully.", "DONE", JOptionPane.INFORMATION_MESSAGE, icon);
                        } else {
                            DB.iud("insert into hotel_reg (Name,Area,Contact) "
                                    + "values (   '" + jTextField2.getText() + "', '" + jComboBox1.getSelectedItem() + "' , '" + jTextField3.getText() + "' ) ");
                            JOptionPane.showMessageDialog(this, "Insert new Value successfully.", "DONE", JOptionPane.INFORMATION_MESSAGE, icon);
                        }
                        idLoad();
                        jButton6.setEnabled(true);
                    } else {
                        JOptionPane.showMessageDialog(this, "Invliid password !", "INVALID", JOptionPane.INFORMATION_MESSAGE);
                    }
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        //delete
        if (jTextField3.getText().equals("") || jTextField2.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Select The Row Before Delete !", "ERROR", JOptionPane.INFORMATION_MESSAGE, erricon);
        } else {

            JPasswordField passwordField = new JPasswordField(10);
            int option = JOptionPane.showConfirmDialog(null, passwordField, "Enter Password",
                    JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);
            if (option == JOptionPane.OK_OPTION) {
                String password = new String(passwordField.getPassword());
                if (password.equals("123")) {
                    try {
                        DB.iud("delete from hotel_reg where id= '" + jTextField1.getText() + "' ");
                        JOptionPane.showMessageDialog(this, "Delete successfully.", "DONE", JOptionPane.INFORMATION_MESSAGE, icon);
                        jTextField2.setText("");
                        jTextField3.setText("");

                        idLoad();
                        DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
                        dtm.removeRow(jTable1.getSelectedRow());
                        jButton6.setEnabled(true);
                    } catch (Exception e) {
                        e.printStackTrace();
                        JOptionPane.showMessageDialog(this, "Delete Fail !", "ERROR", JOptionPane.INFORMATION_MESSAGE, erricon);
                    }

                } else {
                    JOptionPane.showMessageDialog(this, "Invliid password !", "INVALID", JOptionPane.INFORMATION_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        try {
            DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
            dtm.setRowCount(0);
            ResultSet rs = DB.search("select * from hotel_reg");
            while (rs.next()) {
                Vector<Object> v = new Vector<>();
                v.add(rs.getString("id"));

                v.add(rs.getString("Name"));
                v.add(rs.getString("Area"));
                v.add(rs.getString("Contact"));
                dtm.addRow(v);
                idLoad();
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Table loading Unsuccesfully !", "ERROR", JOptionPane.INFORMATION_MESSAGE, erricon);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTextField1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField1FocusGained
        if (jTextField3.getText().equals("")) {
            jTextField4.grabFocus();
        } else {
            jTextField2.grabFocus();
        }
        JOptionPane.showMessageDialog(this, "Can't Edit ", "Error", JOptionPane.INFORMATION_MESSAGE, erricon);
    }//GEN-LAST:event_jTextField1FocusGained

    private void jTextField4KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField4KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            jList1.requestFocus();
        }
    }//GEN-LAST:event_jTextField4KeyPressed

    private void jList1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jList1KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            Object selectedValue = jList1.getSelectedValue();
            if (selectedValue != null) {
                ((DefaultTableModel) jTable1.getModel()).setNumRows(0);
                String[] parts = selectedValue.toString().split("##");
                if (parts.length >= 2) {
                    jTextField2.setText(parts[0]);
                    jTextField2.requestFocus();
                    jTextField4.setText("");
                    jList1.setListData(new String[0]);
                    // search allready cus
                    try {
                        DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
                        dtm.setRowCount(0);
                        ResultSet rs = DB.search("select * from rooming where t_id = '" + parts[0] + "'  ");
                        while (rs.next()) {
                            Vector<Object> v = new Vector<>();
                            v.add(rs.getString("id"));
                            v.add(rs.getString("passport"));
                            v.add(rs.getString("name"));
                            v.add(rs.getString("r_type"));
                            v.add(rs.getString("qty"));
                            dtm.addRow(v);
                        }
                    } catch (Exception e) {
                        e.printStackTrace();
                    }
                }
            }
        } else if (evt.getKeyCode() == KeyEvent.VK_UP) {
            jTextField4.requestFocus();
        }
    }//GEN-LAST:event_jList1KeyPressed

    private void jTextField3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField3KeyTyped
        if (!Character.isDigit(evt.getKeyChar()) && evt.getKeyCode() == KeyEvent.VK_ENTER) {
            JOptionPane.showMessageDialog(this, "Only Valid Digits or Enter Key!", "ERROR", JOptionPane.INFORMATION_MESSAGE, erricon);
            evt.consume();
        }
    }//GEN-LAST:event_jTextField3KeyTyped

    private void jTextField2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField2KeyTyped
        if (Character.isDigit(evt.getKeyChar())) {
            JOptionPane.showMessageDialog(this, "Only Valid Text !", "ERROR", JOptionPane.INFORMATION_MESSAGE, erricon);
            evt.consume();
        }
    }//GEN-LAST:event_jTextField2KeyTyped

    private void jTextField2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField2KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER || evt.getKeyCode() == KeyEvent.VK_RIGHT) {
            jComboBox1.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_LEFT) {
            jTextField4.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            jButton3.requestFocus();
        }
    }//GEN-LAST:event_jTextField2KeyPressed

    private void jComboBox1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBox1KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER || evt.getKeyCode() == KeyEvent.VK_RIGHT) {
            jTextField3.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_LEFT) {
            jTextField2.requestFocus();
        }
    }//GEN-LAST:event_jComboBox1KeyPressed

    private void jTextField3FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField3FocusGained
        if (jTextField2.getText().equals("")) {
            jTextField2.grabFocus();
            JOptionPane.showMessageDialog(this, "Insert Name !", "Info", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_jTextField3FocusGained

    private void jTextField2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField2FocusGained
//        if (jTextField3.getText().equals("")) {
//            jTextField4.grabFocus();
//            JOptionPane.showMessageDialog(this, "Select The Tourist !", "Info", JOptionPane.INFORMATION_MESSAGE);
//        }
    }//GEN-LAST:event_jTextField2FocusGained

    private void jTextField3KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField3KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_LEFT) {
            jComboBox1.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            jButton3.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (jTextField3.getText().equals("") || jTextField2.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "Please Fill The Data !", "ERROR", JOptionPane.INFORMATION_MESSAGE, erricon);

            } else {
                DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
                Vector<Object> v = new Vector<>();
                v.add("");

                v.add(jTextField2.getText());
                v.add(jComboBox1.getSelectedItem());
                v.add(jTextField3.getText());
                dtm.addRow(v);
                comboLoad();
                jTextField2.setText("");
                jTextField3.setText("");
            }
        }
    }//GEN-LAST:event_jTextField3KeyPressed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        //select table data 
        try {
            DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
            if (jTable1.getSelectedRow() != -1) {

                String id = dtm.getValueAt(jTable1.getSelectedRow(), 0).toString();
                //String t_id = dtm.getValueAt(jTable1.getSelectedRow(), 1).toString();
                String name = dtm.getValueAt(jTable1.getSelectedRow(), 1).toString();
                String area = dtm.getValueAt(jTable1.getSelectedRow(), 2).toString();
                String contact = dtm.getValueAt(jTable1.getSelectedRow(), 3).toString();

                jTextField1.setText(id);
                //jTextField5.setText(t_id);
                jTextField2.setText(name);
                jComboBox1.setSelectedItem(area);
                jTextField3.setText(contact);

                jButton6.setEnabled(false);
            } else {
                JOptionPane.showMessageDialog(this, "Not Found !", "Info", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton2KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_RIGHT) {
            jButton6.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            try {
                DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
                dtm.setRowCount(0);
                ResultSet rs = DB.search("select * from hotel_reg");
                while (rs.next()) {
                    Vector<Object> v = new Vector<>();
                    v.add(rs.getString("id"));
                    //v.add(rs.getString("t_id"));
                    v.add(rs.getString("Name"));
                    v.add(rs.getString("Area"));
                    v.add(rs.getString("Contact"));
                    dtm.addRow(v);
                    idLoad();
                }
            } catch (Exception e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(this, "Table loading Unsuccesfully !", "ERROR", JOptionPane.INFORMATION_MESSAGE, erricon);
            }
        }
    }//GEN-LAST:event_jButton2KeyPressed

    private void jButton6KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton6KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_LEFT) {
            jButton2.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_RIGHT) {
            jButton3.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            //save
            if (jTextField1.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "Please Enter data before Save !", "Error", JOptionPane.INFORMATION_MESSAGE, erricon);
            } else {
                try {
                    DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
                    for (int i = 0; i < dtm.getRowCount(); i++) {

                        //String t_id = dtm.getValueAt(jTable1.getSelectedRow(), 1).toString();
                        String name = dtm.getValueAt(i, 1).toString();
                        String area = dtm.getValueAt(i, 2).toString();
                        String contact = dtm.getValueAt(i, 3).toString();

                        DB.iud("insert into hotel_reg (Name,Area,Contact) "
                                + "values (  '" + name + "','" + area + "','" + contact + "' )");

                        JOptionPane.showMessageDialog(this, "Insert successfully.", "DONE", JOptionPane.INFORMATION_MESSAGE, icon);
                        idLoad();
                    }
                } catch (Exception e) {
                    e.printStackTrace();
                    JOptionPane.showMessageDialog(this, "Save Unsucces !", "ERROR", JOptionPane.INFORMATION_MESSAGE, erricon);
                }

            }
        }
    }//GEN-LAST:event_jButton6KeyPressed

    private void jButton3KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton3KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_LEFT) {
            jButton6.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_RIGHT) {
            jButton4.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            ((DefaultTableModel) jTable1.getModel()).setNumRows(0);
            jList1.setListData(new String[0]);
            jTextField2.setText("");
            jTextField3.setText("");
            //jTextField5.setText("");
            idLoad();
            jButton6.setEnabled(true);
        }
    }//GEN-LAST:event_jButton3KeyPressed

    private void jButton4KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton4KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_LEFT) {
            jButton3.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_RIGHT) {
            jButton5.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            //update
            try {
                if (jTextField1.getText().equals("") || jTextField2.getText().equals("")) {
                    JOptionPane.showMessageDialog(this, "Select Row", "DONE", JOptionPane.INFORMATION_MESSAGE, erricon);
                } else {
                    JPasswordField passwordField = new JPasswordField(10);
                    int option = JOptionPane.showConfirmDialog(null, passwordField, "Enter Password",
                            JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);
                    if (option == JOptionPane.OK_OPTION) {
                        String password = new String(passwordField.getPassword());
                        if (password.equals("123")) {
                            DB.iud("update hotel_reg set "
                                    + " Name = '" + jTextField2.getText() + "' ,Area = '" + jComboBox1.getSelectedItem() + "' ,Contact = '" + jTextField3.getText() + "' WHERE id = '" + jTextField1.getText() + "' ");
                            JOptionPane.showMessageDialog(this, "Update successfully.", "DONE", JOptionPane.INFORMATION_MESSAGE, icon);
                            idLoad();
                            jButton6.setEnabled(true);
                        } else {
                            JOptionPane.showMessageDialog(this, "Invliid password !", "INVALID", JOptionPane.INFORMATION_MESSAGE);
                        }
                    }
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_jButton4KeyPressed

    private void jButton5KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton5KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_LEFT) {
            jButton4.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            //delete
            if (jTextField3.getText().equals("") || jTextField2.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "Select The Row Before Delete !", "ERROR", JOptionPane.INFORMATION_MESSAGE, erricon);
            } else {

                JPasswordField passwordField = new JPasswordField(10);
                int option = JOptionPane.showConfirmDialog(null, passwordField, "Enter Password",
                        JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);
                if (option == JOptionPane.OK_OPTION) {
                    String password = new String(passwordField.getPassword());
                    if (password.equals("123")) {
                        try {
                            DB.iud("delete from hotel_reg where id= '" + jTextField1.getText() + "' ");
                            JOptionPane.showMessageDialog(this, "Delete successfully.", "DONE", JOptionPane.INFORMATION_MESSAGE, icon);
                            jTextField2.setText("");
                            jTextField3.setText("");

                            idLoad();
                            DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
                            dtm.removeRow(jTable1.getSelectedRow());
                            jButton6.setEnabled(true);
                        } catch (Exception e) {
                            e.printStackTrace();
                            JOptionPane.showMessageDialog(this, "Delete Fail !", "ERROR", JOptionPane.INFORMATION_MESSAGE, erricon);
                        }

                    } else {
                        JOptionPane.showMessageDialog(this, "Invliid password !", "INVALID", JOptionPane.INFORMATION_MESSAGE);
                    }
                }
            }
        }
    }//GEN-LAST:event_jButton5KeyPressed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
        if (jTable1.getSelectedRow() != -1) {
            dtm.removeRow(jTable1.getSelectedRow());
        } else {
            JOptionPane.showMessageDialog(this, "Please Selecet Item Row !", "ERROR", JOptionPane.INFORMATION_MESSAGE, erricon);
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jTable1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            //select table data 
            try {
                DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
                if (jTable1.getSelectedRow() != -1) {

                    String id = dtm.getValueAt(jTable1.getSelectedRow(), 0).toString();
                    //String t_id = dtm.getValueAt(jTable1.getSelectedRow(), 1).toString();
                    String name = dtm.getValueAt(jTable1.getSelectedRow(), 1).toString();
                    String area = dtm.getValueAt(jTable1.getSelectedRow(), 2).toString();
                    String contact = dtm.getValueAt(jTable1.getSelectedRow(), 3).toString();

                    jTextField1.setText(id);
                    //jTextField5.setText(t_id);
                    jTextField2.setText(name);
                    jComboBox1.setSelectedItem(area);
                    jTextField3.setText(contact);

                    jButton6.setEnabled(false);
                } else {
                    JOptionPane.showMessageDialog(this, "Not Found !", "Info", JOptionPane.INFORMATION_MESSAGE);
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_jTable1KeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(hotel_reg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(hotel_reg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(hotel_reg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(hotel_reg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new hotel_reg().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JList<String> jList1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    // End of variables declaration//GEN-END:variables

    private void comboLoad() {
        try {
            jComboBox1.removeAllItems();
            ResultSet rs = DB.search("select * from hotel_area order by Area");
            while (rs.next()) {
                jComboBox1.addItem(rs.getString("Area"));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void idLoad() {
        try {
            ResultSet rs = DB.search("select id from hotel_reg order by id DESC");
            if (rs.next()) {
                jTextField1.setText(String.valueOf(Integer.parseInt(rs.getString("id")) + 1));
            } else {
                jTextField1.setText("1");
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void setDate() {
        d = new Date();
        jLabel18.setText(sdf.format(d));
    }

    private void setTime() {
        Timer t = new Timer(1000, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                d1 = new Date();
                jLabel19.setText(sdf1.format(d1));
            }
        });
        t.start();
    }
}
